{"version":3,"sources":["util/index.js","bezier/index.js","serviceWorker.js","index.js"],"names":["getRatioCoord","_ref","_ref2","ratio","x1","x","y1","y","getControlDots","dots","controlDots","currentDots","len","length","d","i","push","ease","linear","k","easeInQuad","Math","pow","easeInCubic","easeInQuart","easeInQuint","util","getRAF","rAF","requestAnimationFrame","cb","setTimeout","cancelrAF","cancelAnimationFrame","clearTimeout","getBezierCoords","coords","pop","toFixed","getRandomColor","concat","random","toString","getRatio","time","duration","arguments","undefined","getTime","Date","now","getEmptyArr","count","arr","debounce","fn","wait","timer","context","this","args","apply","getOffset","dom","parent","left","top","offsetLeft","offsetTop","offsetParent","PRIMARY_COLOR_ENHANCE","PANEL_WIDTH","CONTROL_DOTS_RANGE","DURATION_RANGE","DOT_RADIUS","COLOR","LINE_WIDTH","LINE_CAP","BEZIER_LINE_WIDTH","BEZIER_LINE_CAP","BEZIER_COLOR","DEFAULT_COUNT","DEFAULT_DURATION","DEFAULT_EASING_TYPE","Bezier","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","windowResize","canvasWidth","window","innerWidth","canvasHeight","innerHeight","imageData","ctx","getImageData","update","drawDot","_ref$radius","radius","_ref$color","color","beginPath","arc","PI","closePath","fillStyle","fill","drawLine","beginDot","endDot","_ref2$lineWidth","lineWidth","_ref2$lineCap","lineCap","_ref2$color","moveTo","lineTo","strokeStyle","stroke","drawControlDots","forEach","index","colors","dot","drawBezier","bezierCoords","filter","c","_coords$shift","shift","_ref3","beginDrawing","startTime","destTime","map","setState","isAnimating","step","easingType","clear","drawDotsAndBezier","drawDetail","ctxd","clearRect","font","_ref4","fillText","handleCanvasMouseDown","e","_util$getOffset","canvas","_x","pageX","_y","pageY","curCoord","state","_this$dots$i","sqrt","targetIndex","handleCanvasMouseMove","_util$getOffset2","handleCanvasMouseUp","handleConfigChange","type","value","listRender","item","className","classNames","easing-list-item","disable","active","react_default","a","createElement","list","Item","onClick","bind","assertThisInitialized","style","margin","canvasDetail","getContext","addEventListener","putImageData","removeEventListener","_this2","slider","min","max","onChange","disabled","bordered","size","dataSource","keys","renderItem","width","height","ref","onMouseDown","onMouseMove","onMouseUp","jsx","Component","Boolean","location","hostname","match","ReactDOM","render","bezier","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.393a2373.chunk.js","sourcesContent":["/**\n * 获取线段 AB 上某一点 C， 使 AC / AB = ratio\n * @param {Object} dot1 点 A\n * @param {Object} dot2 点 B\n * @param {Number} ratio 比例\n */\nconst getRatioCoord = ({x:x1,y:y1}, {x:x2,y:y2}, ratio) => ({\n    x: x1 + ratio * (x2 - x1),\n    y: y1 + ratio * (y2 - y1)\n});\n\n/**\n * 根据 ratio，和初始控制点获得所有控制点的坐标\n * @param {Array} dots [{x, y}, ...] 贝塞尔曲线最外层控制点\n * @param {Number} ratio 比例\n */\nconst getControlDots = (dots, ratio) => {\n    const controlDots = [dots];\n    let currentDots = dots;\n    let len = dots.length;\n    while (len > 1) {\n        const d = [];\n        for (let i = 0; i < len - 1; i++) {\n            d.push(getRatioCoord(currentDots[i], currentDots[i + 1], ratio));\n        }\n        controlDots.push(d);\n        currentDots = d;\n        len--;\n    }\n    return controlDots;\n};\n\n/**\n * 获取贝塞尔曲线的坐标点\n * @param {Array} dots [{x, y}, ...] 贝塞尔曲线最外层控制点\n */\nconst getBezierCoords = (dots) => {\n    const coords = [];\n    let controlDots = [];\n    const step = 0.001;\n    let ratio = 0;\n    while(ratio <= 1) {\n        // 需要优化，直接求出曲线上面的点而不是一层一层求控制点\n        controlDots = getControlDots(dots, ratio);\n        coords.push(controlDots.pop()[0]);\n        ratio = +(ratio + step).toFixed(3); // 精度处理\n    }\n    return coords;\n};\n\n/**\n * 获取 requestAnimationFrame、cancelAnimationFrame\n */\nconst getRAF = () => {\n    const basicRAF = cb => setTimeout(cb, 1000 / 60);\n    let rAF = requestAnimationFrame || basicRAF;\n    let cancelrAF = cancelAnimationFrame || clearTimeout;\n    return {\n        rAF,\n        cancelrAF\n    };\n};\n\n/**\n * 防抖函数\n * @param {Function} fn 需要添加防抖的函数\n * @param {Number} wait 防抖时间\n */\nconst debounce = (fn, wait = 100) => {\n    var timer = null;\n    return function () {\n        var context = this;\n        var args = arguments;\n        if (timer) {\n            clearTimeout(timer);\n            timer = null;\n        }\n        timer = setTimeout(function () {\n            fn.apply(context, args);\n        }, wait);\n    };\n};\n\n/**\n * 获取随机颜色值\n */\nconst getRandomColor = () => {\n    return `#${(~~(Math.random() * (1 << 24))).toString(16)}`;\n};\n\n/**\n * 缓动函数的 factor\n * start(起点)、end(终点)、time(当前时间)、duration(运动总时间)\n * 则当前位置 = (end - start) * factor(time / duration) + start\n */\nconst ease = {\n    linear: k => k,\n    easeInQuad: k => Math.pow(k, 2),\n    easeInCubic: k => Math.pow(k, 3),\n    easeInQuart: k => Math.pow(k, 4),\n    easeInQuint: k => Math.pow(k, 5)\n};\n\n/**\n * 获取当前时刻所需的 ratio\n * @param {Number} time 当前时间\n * @param {Number} duration 动画时长\n * @param {Function} easingFn 缓动函数的 factor\n */\nconst getRatio = (time, duration, easingFn = ease.linear) => easingFn(time/duration);\n\n/**\n * 返回当前时间\n */\nconst getTime = () => Date.now();\n\n/**\n * 返回给定长度的数组，数组元素为 0, 1, 2, ...\n * @param {Number} count 数组长度\n */\nconst getEmptyArr = (count) => {\n    const arr = [];\n    for (let i = 0; i < count; i++) {\n        arr.push(i);\n    }\n    return arr;\n};\n\n/**\n * 获取 dom 元素相对页面左/上边缘的距离\n * @param {HTMLElement} dom DOM 元素\n */\nconst getOffset = (dom) => {\n    let parent = dom;\n    let left = 0;\n    let top = 0;\n    while (parent) {\n        left += parent.offsetLeft;\n        top += parent.offsetTop;\n        parent = parent.offsetParent;\n    }\n    return { left, top };\n};\n\nconst util = {\n    getRatioCoord,\n    getControlDots,\n    getRAF,\n    getBezierCoords,\n    getRandomColor,\n    ease,\n    getRatio,\n    getTime,\n    getEmptyArr,\n    debounce,\n    getOffset\n};\n\nexport default util;\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport util from '../util';\nimport { Slider, List } from 'antd';\n\nconst PRIMARY_COLOR_ENHANCE = 'rgba(33, 150, 243, 1)'; // 主题色-强调\nconst PRIMARY_COLOR = 'rgba(140, 200, 255, 1)'; // 主题色\nconst PRIMARY_COLOR_LIGHT = 'rgba(140, 200, 255, 0.3)'; // 主题色-淡\nconst DISABLE_COLOR = '#f5f5f5'; // disable 色\nconst DISABLE_COLOR_ENHANCE = '#b7b7b7'; // disable 色-强调\n\nconst PANEL_WIDTH = 450; // panel 宽度\nconst CANVAS_MARGIN = 10; // canvas 默认外边距\nconst CONTROL_DOTS_RANGE = [3, 20]; // 贝塞尔曲线控制点范围\nconst DURATION_RANGE = [1000, 10000]; // 动画时长范围\nconst DOT_RADIUS = 4; // 默认点半径\nconst COLOR = PRIMARY_COLOR_ENHANCE; // 控制点/线默认颜色\nconst LINE_WIDTH = 2; // 默认线宽\nconst LINE_CAP = 'butt'; // 默认线末端样式\nconst BEZIER_LINE_WIDTH = 4; // 贝塞尔曲线线宽\nconst BEZIER_LINE_CAP = 'round'; // 贝塞尔曲线末端样式\nconst BEZIER_COLOR = '#ff5722'; // 贝塞尔曲线颜色\nconst DEFAULT_COUNT = 3; // 贝塞尔曲线控制点个数默认值\nconst DEFAULT_DURATION = 2000; // 动画时长默认值\nconst DEFAULT_EASING_TYPE = 'linear'; // 动画效果默认值\n\nconst { rAF } = util.getRAF();\nclass Bezier extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isAnimating: false // 是否处于生成贝塞尔曲线的动画中\n        };\n\n        this.canvas = null; // canvas dom\n        this.ctx = null; // canvas 渲染上下文\n        this.canvasDetail = null; // 显示 detail 的 canvas dom\n        this.ctxd = null; // canvas detail 渲染上下文\n        this.imageData = null; // canvas 画布信息\n        this.canvasWidth = window.innerWidth - PANEL_WIDTH; // canvas width\n        this.canvasHeight = window.innerHeight - 20; // canvas height\n        this.count = DEFAULT_COUNT; // 贝塞尔曲线控制点个数\n        this.dots = []; // 贝塞尔曲线控制点坐标\n        this.controlDots = []; // 贝塞尔曲线所有控制点坐标\n        this.colors = []; // 贝塞尔曲线控制点颜色\n        this.ratio = 0; // 生成贝塞尔曲线所需的比例系数 [0, 1]\n        this.targetIndex = null; // 当前选中的外层控制点的 index\n        this.bezierCoords = []; // 贝塞尔曲线坐标\n        this.duration = DEFAULT_DURATION; // 生成贝塞尔曲线的动画时长\n        this.easingType = DEFAULT_EASING_TYPE; // 生成贝塞尔曲线的动画效果\n\n        this.windowResize = util.debounce(this.windowResize, 100);\n    }\n\n    componentDidMount() {\n        this.ctx = this.canvas.getContext('2d');\n        this.ctxd = this.canvasDetail.getContext('2d');\n        window.addEventListener('resize', this.windowResize); // 加上防抖\n    }\n\n    componentDidUpdate() {\n        // 恢复上次的状态\n        this.imageData && this.ctx.putImageData(this.imageData, 0, 0);\n        this.imageData = null;\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.windowResize);\n    }\n\n    // window 大小改变时，更新 canvasWidth、canvasHeight\n    windowResize = () => {\n        this.canvasWidth = window.innerWidth - PANEL_WIDTH;\n        this.canvasHeight = window.innerHeight - 20;\n        // 只有在 canvas 大小变化的时候需要保存当前画布信息\n        this.imageData = this.ctx.getImageData(0, 0, this.canvasWidth, this.canvasHeight);\n        this.update();\n    }\n\n    // 绘制点\n    drawDot = ({ x, y, radius = DOT_RADIUS, color = COLOR }) => {\n        const ctx = this.ctx;\n        ctx.beginPath();\n        ctx.arc(x, y, radius, 0, 2 * Math.PI);\n        ctx.closePath();\n        ctx.fillStyle = color;\n        ctx.fill();\n    }\n\n    // 绘制线\n    drawLine = ({\n        beginDot,\n        endDot,\n        lineWidth = LINE_WIDTH,\n        lineCap = LINE_CAP,\n        color = COLOR\n    }) => {\n        const ctx = this.ctx;\n        ctx.beginPath();\n        ctx.moveTo(beginDot.x, beginDot.y);\n        ctx.lineTo(endDot.x, endDot.y);\n        ctx.closePath();\n        ctx.lineWidth = lineWidth;\n        ctx.lineCap = lineCap;\n        ctx.strokeStyle = color;\n        ctx.stroke();\n    }\n\n    // 绘制控制点, isAll=true 绘制全部；isAll=false 绘制最外层\n    drawControlDots = (isAll = true) => {\n        if (isAll) {\n            this.controlDots.forEach((dots, index) => {\n                const color = this.colors[index];\n                dots.forEach((dot, i) => {\n                    if (i !== 0) {\n                        this.drawLine({\n                            beginDot: dots[i - 1],\n                            endDot: dot,\n                            color\n                        });\n                    }\n                    this.drawDot({\n                        x: dot.x,\n                        y: dot.y,\n                        color\n                    });\n                });\n            });\n        } else {\n            this.dots.forEach((dot, i) => {\n                if (i !== 0) {\n                    this.drawLine({\n                        beginDot: this.dots[i - 1],\n                        endDot: dot\n                    });\n                }\n                this.drawDot({\n                    x: dot.x,\n                    y: dot.y\n                });\n            });\n        }\n    }\n\n    // 绘制贝塞尔曲线，isAll=true，绘制全部；isAll=false，根据 ratio 按比例绘制\n    drawBezier = (isAll = true) => {\n        const ratio = isAll ? 1 : this.ratio;\n        const len = this.bezierCoords.length;\n        const coords = this.bezierCoords.filter((c, i) => i / len <= ratio);\n        const { x, y } = coords.shift();\n        const ctx = this.ctx;\n        ctx.beginPath();\n        ctx.moveTo(x, y);\n        coords.forEach(({x,y}) => {\n            ctx.lineTo(x, y);\n        });\n        ctx.strokeStyle = BEZIER_COLOR;\n        ctx.lineWidth = BEZIER_LINE_WIDTH;\n        ctx.lineCap = BEZIER_LINE_CAP;\n        ctx.stroke();\n    }\n\n    // 开始生成贝塞尔曲线\n    beginDrawing = () => {\n        this.bezierCoords = util.getBezierCoords(this.dots);\n        const startTime = util.getTime();\n        const destTime = startTime + this.duration;\n        this.colors = util.getEmptyArr(this.count).map(i => i === 0 ? COLOR : util.getRandomColor());\n        const step = () => {\n            const now = util.getTime();\n            if (now >= destTime) {\n                this.ratio = 1;\n            } else {\n                this.ratio = util.getRatio(now - startTime, this.duration, util.ease[this.easingType]);\n            }\n            // 更新控制点\n            this.controlDots = util.getControlDots(this.dots, this.ratio);\n            this.clear();\n            this.drawControlDots();\n            this.drawBezier(false);\n            if (now >= destTime) {\n                this.clear();\n                this.drawDotsAndBezier();\n                this.setState({ isAnimating: false });\n                return;\n            }\n            rAF(step);\n        };\n        this.setState({ isAnimating: true });\n        step();\n    }\n\n    // 只绘制最外层控制点和贝塞尔曲线\n    drawDotsAndBezier = () => {\n        this.drawControlDots(false);\n        this.drawBezier();\n    }\n\n    // 绘制 detail，包括 dots\n    drawDetail = () => {\n        const ctxd = this.ctxd;\n        ctxd.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n        ctxd.font = '20px Arial';\n        ctxd.fillStyle = PRIMARY_COLOR_ENHANCE;\n        this.dots.forEach(({ x, y }, i) => {\n            ctxd.fillText(`[${x}, ${y}]`, 10, 25 * (i + 1));\n        });\n    }\n\n    // 清空 canvas 画布\n    clear = () => {\n        this.ctx.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n    }\n\n    // 更新视图，因为没有使用 this.state\n    update = () => {\n        this.setState({});\n    }\n\n    handleCanvasMouseDown = (e) => {\n        const { left, top } = util.getOffset(this.canvas);\n        const _x = e.pageX - left;\n        const _y = e.pageY - top;\n        const len = this.dots.length;\n        if (len < this.count) {\n            // 控制点数不够，继续绘制\n            const curCoord = { x: _x, y: _y };\n            this.dots.push(curCoord);\n            this.drawDot(curCoord);\n            if (len !== 0) {\n                this.drawLine({\n                    beginDot: this.dots[len - 1],\n                    endDot: curCoord\n                });\n            }\n            this.drawDetail();\n            // 如果是最后一个点，开始动画\n            if (len + 1 === this.count) {\n                this.beginDrawing();\n            }\n        } else {\n            // 确定点击外层控制点的 index\n            if (this.state.isAnimating) { return; }\n            for (let i = 0; i < this.dots.length; i++) {\n                const { x, y } = this.dots[i];\n                const distance = Math.sqrt(Math.pow(x - _x, 2) + Math.pow(y - _y, 2));\n                if (distance <= 6) {\n                    this.targetIndex = i;\n                    break;\n                }\n            }\n        }\n    }\n\n    handleCanvasMouseMove = (e) => {\n        if (this.targetIndex === null) { return; }\n        const { left, top } = util.getOffset(this.canvas);\n        this.dots[this.targetIndex] = {\n            x: e.pageX - left,\n            y: e.pageY - top\n        };\n        this.clear();\n        this.bezierCoords = util.getBezierCoords(this.dots);\n        this.drawDotsAndBezier();\n    }\n\n    handleCanvasMouseUp = () => {\n        this.targetIndex = null;\n    }\n\n    handleConfigChange = (type, value) => {\n        if (this.state.isAnimating) { return; }\n        switch (type) {\n            case 'controlDot':\n                this.count = value;\n                break;\n            case 'duration':\n                this.duration = value;\n                break;\n            case 'easingType':\n                this.easingType = value;\n                break;\n            default:\n                return;\n        }\n        this.dots = [];\n        this.controlDots = [];\n        this.colors = [];\n        this.ratio = 0;\n        this.bezierCoords = [];\n        this.ctxd.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n        this.clear();\n        this.update();\n    }\n\n    listRender = (item) => {\n        const className = classNames({\n            'easing-list-item': true,\n            'disable': this.state.isAnimating,\n            'active': item === this.easingType\n        });\n        return (\n            <List.Item\n                className={className}\n                onClick={this.handleConfigChange.bind(this, 'easingType', item)}\n            >\n                <div style={{margin: '0 auto'}}>{item}</div>\n            </List.Item>\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"panel\">\n                    <div className=\"App-title\">贝塞尔曲线</div>\n                    <div className=\"control\">\n                        <div className=\"title\">控制点个数：{this.count}</div>\n                        <Slider\n                            dots={true}\n                            min={CONTROL_DOTS_RANGE[0]}\n                            max={CONTROL_DOTS_RANGE[1]}\n                            step={1}\n                            value={this.count}\n                            onChange={this.handleConfigChange.bind(this, 'controlDot')}\n                            disabled={this.state.isAnimating}\n                        />\n                    </div>\n                    <div className=\"duration\">\n                        <div className=\"title\">动画时长：{this.duration / 1000}s</div>\n                        <Slider\n                            dots={true}\n                            min={DURATION_RANGE[0]}\n                            max={DURATION_RANGE[1]}\n                            step={1000}\n                            value={this.duration}\n                            onChange={this.handleConfigChange.bind(this, 'duration')}\n                            disabled={this.state.isAnimating}\n                        />\n                    </div>\n                    <div className=\"animate\">\n                        <div className=\"title\">动画效果：{this.easingType}</div>\n                        <List\n                            className=\"easing-list\"\n                            bordered={true}\n                            size=\"small\"\n                            dataSource={Object.keys(util.ease)}\n                            renderItem={this.listRender}\n                        />\n                    </div>\n                </div>\n                <div className=\"canvas\">\n                    <canvas\n                        width={`${this.canvasWidth}px`}\n                        height={`${this.canvasHeight}px`}\n                        ref={c => this.canvasDetail = c}\n                    >\n                        你的浏览器不支持 canvas， 请升级你的浏览器。\n                    </canvas>\n                    <canvas\n                        width={`${this.canvasWidth}px`}\n                        height={`${this.canvasHeight}px`}\n                        ref={c => this.canvas = c}\n                        onMouseDown={this.handleCanvasMouseDown}\n                        onMouseMove={this.handleCanvasMouseMove}\n                        onMouseUp={this.handleCanvasMouseUp}\n                    >\n                        你的浏览器不支持 canvas， 请升级你的浏览器。\n                    </canvas>\n                </div>\n                <style jsx=\"true\">{`\n                    .App {\n                        overflow: hidden;\n                        display: flex;\n                        flex-direction: row;\n                        height: 100%;\n                    }\n                    .App-title {\n                        font-size: 30px;\n                        font-weight: bolder;\n                        color: ${PRIMARY_COLOR_ENHANCE};\n                        margin-bottom: 20px;\n                    }\n                    .panel {\n                        width: ${PANEL_WIDTH}px;\n                        height: 100%;\n                        display: flex;\n                        flex-direction: column;\n                        padding-left: 20px;\n                        padding-top: 20px;\n                    }\n                    .control, .duration {\n                        width: 400px;\n                    }\n                    .title {\n                        color: ${PRIMARY_COLOR_ENHANCE};\n                        font-size: 16px;\n                        font-weight: bold;\n                    }\n                    .easing-list {\n                        margin-top: 10px;\n                        width: 200px;\n                        overflow: scroll;\n                    }\n                    .easing-list-item {\n                        transition: all 0.5s;\n                        color: ${PRIMARY_COLOR_ENHANCE};\n                    }\n                    .easing-list-item:not(.disable):hover {\n                        background-color: ${PRIMARY_COLOR_LIGHT};\n                        cursor: pointer;\n                    }\n                    .easing-list-item.disable:hover {\n                        cursor: not-allowed;\n                    }\n                    .disable {\n                        background-color: ${DISABLE_COLOR};\n                        color: ${DISABLE_COLOR_ENHANCE};\n                    }\n                    .active {\n                        background-color: ${PRIMARY_COLOR_LIGHT};\n                    }\n                    .canvas {\n                        margin: 0 ${CANVAS_MARGIN}px;\n                        border: 1px solid ${PRIMARY_COLOR};\n                        border-radius: 5px;\n                        box-shadow: 0 0 5px 1px ${PRIMARY_COLOR};\n                        align-self: center;\n                        position: relative;\n                        line-height: 0;\n                    }\n                    .canvas canvas:last-child {\n                        position: absolute;\n                        top: 0;\n                        left: 0;\n                    }\n                `}</style>\n            </div>\n        );\n    }\n}\n\nexport default Bezier;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Bezier from './bezier';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Bezier />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}